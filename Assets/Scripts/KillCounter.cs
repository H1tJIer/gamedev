using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class KillCounter : MonoBehaviour, IUserInterface
{
    #region Serialize Fields
    [SerializeField]
    private Text _text = null;
    #endregion

    #region Private Fields
    private int counter = 0;
    private int normalFontSize = 35;
    private int maxFontSize = 45;

    private GameController gameController; // –¥–æ–±–∞–≤–∏–ª–∏ GameController
    #endregion

    #region Public Methods
    public void Init()
    {
        SetText(); // –ü–æ–∫–∞–∂–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        Zombie.onDie += SetText; // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ

#pragma warning disable CS0618 // Type or member is obsolete

        gameController = FindObjectOfType<GameController>(); // –ù–∞–π–¥—ë–º GameController –≤ —Å—Ü–µ–Ω–µ
#pragma warning restore CS0618 // Type or member is obsolete

    }

    public void Deinit()
    {
        Zombie.onDie -= SetText;
    }
    #endregion

    #region Private Methods
    private void SetText()
    {
        _text.text = $"{Localization.ENEMY_KILLED} {counter++}";

        // üî• –£–≤–µ–¥–æ–º–ª—è–µ–º GameController –æ–± —É–±–∏–π—Å—Ç–≤–µ
        if (gameController != null)
        {
            gameController.RegisterKill();
        }

        StartCoroutine(growEffect());

        IEnumerator growEffect()
        {
            int fontSize = normalFontSize;

            while (fontSize < maxFontSize)
                yield return grow(1);

            while (fontSize > normalFontSize)
                yield return grow(-1);

            IEnumerator grow(int value)
            {
                fontSize += value;
                _text.fontSize = fontSize;

                yield return new WaitForFixedUpdate();
            }
        }
    }
    #endregion
}
